module(load="mmjsonparse") #for parsing CEE-enhanced syslog messages
action(type="mmjsonparse")
module(load="mmnormalize")

module(load="omelasticsearch") #for indexing to Elasticsearch

# this is for index names to be like: logstash-YYYY.MM.DD
template(name="logstash-index" type="list") {
    constant(value="logstash-")
    property(name="timereported" dateFormat="rfc3339" position.from="1" position.to="4")
    constant(value=".")
    property(name="timereported" dateFormat="rfc3339" position.from="6" position.to="7")
    constant(value=".")
    property(name="timereported" dateFormat="rfc3339" position.from="9" position.to="10")
}


template(name="messageToES" type="list") {
    property(name="jsonmesg")
}

template(name="messageToES"
   type="list") {
#- open the curly brackets,
#- add the timestamp field surrounded with quotes
#- add the colon which separates field from value
#- open the quotes for the timestamp itself
   constant(value="{\"@timestamp\":\"")
#- add the timestamp from the log,
# format it in RFC-3339, so that ES detects it by default
   property(name="timereported" dateFormat="rfc3339")
#- add timereported fully
   constant(value="\",\"timereported\":\"")
   property(name="timereported")
#- close the quotes for timestamp,
#- add a comma, then the syslogtag field in the same manner
   constant(value="\",\"tag\":\"")
#- now the syslogtag field itself
# and format="json" will ensure special characters
# are escaped so they won't break our JSON
   property(name="syslogtag" format="json")

   constant(value="\",\"host\":\"")        property(name="hostname")
   constant(value="\",\"severity\":\"")    property(name="syslogseverity-text")
   constant(value="\",\"facility\":\"")    property(name="syslogfacility-text")
#- close the quotes
#- add a comma
#- then add our JSON-formatted syslog message,
# but start from the 2nd position to omit the left
# curly bracket
   constant(value="\",")
   property(name="$!all-json" position.from="2")
}

template (name="HostLogs" type="string" string="/var/log/remote/%programname%.log")
action(type="omfile" DynaFile="HostLogs")

# http://wiki.rsyslog.com/index.php/Queues_on_v6_with_omelasticsearch
# this is where we actually send the logs to Elasticsearch
# Server property is changed through the start.sh script
*.*     action(type="omelasticsearch"
    template="messageToES"
    searchIndex="logstash-index"
    dynSearchIndex="on"
    server="localhost"
    serverport="9200"
    bulkmode="on"
    searchType="logs"
    queue.dequeuebatchsize="200"
    queue.type="fixedarray"
    queue.filename="dbq"
    queue.highwatermark="1200000"
    queue.lowwatermark="400000"
    queue.maxdiskspace="5g"
    queue.size="2000000"
    queue.workerthreads="5"   # 5 workers for the action
    queue.saveonshutdown="on"
    action.resumeretrycount="-1")


input(type="imtcp" port="514")
input(type="imudp" port="514")
