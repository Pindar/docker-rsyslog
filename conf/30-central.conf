module(load="omelasticsearch") # for outputting to Elasticsearch
# this is for index names to be like: logstash-YYYY.MM.DD
template(name="logstash-index" type="list") {
    constant(value="logstash-")
    property(name="timereported" dateFormat="rfc3339" position.from="1" position.to="4")
    constant(value=".")
    property(name="timereported" dateFormat="rfc3339" position.from="6" position.to="7")
    constant(value=".")
    property(name="timereported" dateFormat="rfc3339" position.from="9" position.to="10")
}

# this is for formatting our syslog in JSON with @timestamp
template(name="plain-syslog" type="list") {
    constant(value="{")
      constant(value="\"@timestamp\":\"")     property(name="timereported" dateFormat="rfc3339")
      constant(value="\",\"host\":\"")        property(name="hostname")
      constant(value="\",\"severity\":\"")    property(name="syslogseverity-text")
      constant(value="\",\"facility\":\"")    property(name="syslogfacility-text")
      constant(value="\",\"tag\":\"")   property(name="syslogtag" format="json")
      constant(value="\",\"message\":\"")    property(name="msg" format="json")
    constant(value="\"}")
}

template (name="HostLogs" type="string" string="/var/log/remote/%programname%.log")

ruleset(name="remote"){
    action(type="omfile" DynaFile="HostLogs")

# http://wiki.rsyslog.com/index.php/Queues_on_v6_with_omelasticsearch
# this is where we actually send the logs to Elasticsearch
# Server property is changed through the start.sh script
*.*     action(type="omelasticsearch"
    template="plain-syslog"
    searchIndex="logstash-index"
    dynSearchIndex="on"
    server="localhost"
    serverport="9200"
    bulkmode="on"
    searchType="logs"
    queue.dequeuebatchsize="200"
    queue.type="fixedarray"
    queue.filename="dbq"
    queue.highwatermark="1200000"
    queue.lowwatermark="400000"
    queue.maxdiskspace="5g"
    queue.size="2000000"
    queue.workerthreads="5"   # 5 workers for the action
    queue.saveonshutdown="on"
    action.resumeretrycount="-1")
}

input(type="imtcp" port="514" ruleset="remote")
input(type="imudp" port="514" ruleset="remote")